#!/bin/sh
# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/test/framework/populate-sandbox $
#
# OpenPOWER sbe Project
#
# Contributors Listed Below - COPYRIGHT 2015,2019
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

# Ensure sandbox exists (create-sandbox has been called).
if [ -z $SANDBOXBASE ];
then
    echo "SANDBOXBASE variable uninitialized.."
    exit -1
fi

if [ ! -d "$SANDBOXBASE" ];
then
    echo "Cannot find sandbox: $SANDBOXBASE"
    exit -1
fi

# Create test directory.
mkdir -p $SBETESTDIR || exit -1

# Create test directory.
mkdir -p $SBEFW_IMG_DIR || exit -1

# Copy sbe binaries
cp  $SBEROOT/images/*.bin $SBEFW_IMG_DIR/ || exit -1
cp  $SBEROOT/images/simics.tar $SBEFW_DIR/ || exit -1
# Compile sbe code in sandbox to copy binaries at right place
echo "---Setup sandbox for sbe binaries."

execute_in_sandbox "cd $SBEFW_DIR; mk -a" \
                   "ppc" || exit -1

execute_in_sandbox "cd $SBEFW_DIR; mk install_all" \
                   "ppc" || exit -1


# Copy test files.
if [ "$MACHINE_TYPE" = "NIMBUS" ]; then

    cp  -r $SBEROOT/src/test/testcases/* $SBETESTDIR/ || exit -1

elif [ "$MACHINE_TYPE" = "AXONE" ]; then

    echo "Untar simics.tar.gz into the sandbox"
    tar -xf $SIMICS_TAR/simics.tar.gz -C $SANDBOXBASE/simics/ || exit -1

    echo "Create the test directory for axone"
    mkdir -p $SANDBOXBASE/simics/targets/p9_axone/sbeTest/ || exit -1

    echo "Copy binary to simics workspace"
    cp $SANDBOXBASE/images/ppc/lab/flash/sbe_seeprom_p9a_10.bin.ecc $SBEROMDIRAXONE/ || exit -1

    echo "Copy engd (scandef.abr) from backing build"
    cp $BACKING_BUILD/obj/ppc/simu/data/cec-chip/scandef.abr $SANDBOXBASE/simics/import/cec-chip/scandef.abr || exit -1

    echo  "Copy test files."
    cp $SANDBOXBASE/obj/ppc/simu/scripts/sbfw/* $SBETESTDIRAXONE/ || exit -1
    cp $SBEROOT/src/import/chips/p9/security/p9_security_white_black_list.csv $SBETESTDIRAXONE/ || exit -1
    cp $SBEROOT/src/build/security/securityRegListGen.py $SBETESTDIRAXONE/ || exit -1
    cp $SBEROOT/src/tools/debug/simics/sbe_startupAxone.simics $SBETESTDIRAXONE/ || exit -1
    cp $SBEROOT/src/test/testcases/testAxone.simics $SBETESTDIRAXONE/ || exit -1

    echo "Copy fsp-trace"
    execute_in_sandbox "which fsp-trace > $SBETESTDIRAXONE/.fsp_trace_path"  "ppc" || exit -1
    fsp_trace_path=`cat $SBETESTDIRAXONE/.fsp_trace_path` || exit -1
    rm $SBETESTDIRAXONE/.fsp_trace_path || exit -1
    cp $fsp_trace_path $SBETESTDIRAXONE || exit -1

    echo "Install simics"
    $SANDBOXBASE/simics/INSTALL.sh || exit -1
fi
